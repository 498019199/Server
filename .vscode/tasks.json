{
    "version": "2.0.0",
    "tasks": [
        // 编译
        {
            "label": "Compile", // 任务名称，与launch.json的preLaunchTask相对应
            "type": "shell", // 可以为process或shell
            "command": "g++", // 要使用的编译器，C语言用clang
            "args": [
                "-g", // 生成和调试有关的信息, 如果加上该参数，编译后不仅会生成.out可执行文件，还会生成后缀为.out.dSYM的文件夹，如果不加，调试器会忽略你设的断点
                "*.cpp",
                "-o", // 指定输出文件名，os X和Linux下不加该参数则默认输出a.out，win下默认a.exe
                "a.out", //l 指定编译生成结果（.out文件和.out.dSYM文件夹）
               // "${fileBasenameNoExtension}.out"
               // "-Wall", // 开启额外警告
               // "-std=c++20", // 这里采用c++20标准（推荐），C语言改成"-std=c17"
            ], // 编译的命令，其实相当于VSC帮你在终端中输了这一串东西
            "options": {
                "cwd": "${workspaceFolder}/code/test_react/" // 指定工作目录
            },
            "problemMatcher":["$gcc"],
            "group": {
                "kind": "build",
                "isDefault": true // 不为true时command shift B快捷键就要手动选择了
            },
        },
        // cmake编译
        {
            "label": "cmake_build",
            "type" : "shell",
            "command": "make",
            "group": {
                "kind": "build",
                "isDefault": true
            }
        }
    ]
} 